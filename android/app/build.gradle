def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

def versioningProperties = new Properties()
def versioningFile = rootProject.file('versioning.properties')
if (versioningFile.exists()) {
    versioningFile.withReader('UTF-8') { reader ->
        versioningProperties.load(reader)
    }
}

def appSuffix = versioningProperties.getProperty('app.suffix')
def appEnv = versioningProperties.getProperty('app.env')
def appVersionNameSuffix = ''
if (appSuffix && appEnv) {
    appVersionNameSuffix = "+${appEnv}-${appSuffix}"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
if (getGradle().getStartParameter().getTaskRequests()
        .toString().contains("External")){
    apply plugin: 'com.google.gms.google-services'
}

android {
    compileSdk 34
//    namespace 'com.chenyifaer.homingpigeon'
//    ndkVersion '21.4.7075529'

    compileOptions {
        // flutter_local_notifications
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.chenyifaer.homingpigeon"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName flutterVersionName
        multiDexEnabled true
//        versionCode flutterVersionCode.toInteger()
    }

    flavorDimensions "default"
    productFlavors {
        // 国内分发
        internal {
            dimension "default"
            applicationIdSuffix ".internal"
            proguardFile 'dx-proguard-rules.pro'
        }

        // 国外分发
        external {
            dimension "default"
        }
    }

    signingConfigs {
        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
            release {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            }
        } else {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dev"
            versionNameSuffix appVersionNameSuffix
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation(name: 'tls12patch', ext: 'aar')

    // flutter_local_notifications
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    implementation 'androidx.window:window:1.2.0'
    implementation 'androidx.window:window-java:1.2.0'
}
